on: push
# sonar analysys in
jobs:
  sonar:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
      - name: SonarQube Scan
        run: |
         mvn1 sonar:sonar
         export MAVEN_EXIT_CODE=$?
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_GITHUBACTION }}
          SONAR_HOST_URL: ${{ secrets.SONAR_URL }}
#slack notification jon
  slack_notification:  
   # needs: sonar
   runs-on: self-hosted
   if: ${{ always() }}
   steps:
      - name: Send notification on Slack using Webhooks - Success
        if: ${{ success() &&  always()}}
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "Git push done in the repo. Maven project built successfully."
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_TOKEN}}

      - name: Send notification on Slack using Webhooks - Failure
        if: ${{ failure()  &&  always()}}
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "Git push done in the repo. Maven build failed. Please check the build logs for details."
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_TOKEN }}
  jfrog:
    runs-on: ubuntu-latest
    steps:
    - name: Install JFrog CLI
      run: |
        curl -fL https://getcli.jfrog.io | sh
        sudo mv jfrog /usr/local/bin/

          - name: Set JFrog CLI Path
        run: |
          export PATH=$PATH:/usr/local/bin

        - name: Push Artifacts to JFrog
        run: |
          jfrog rt u target/*.jar githubactionpoc10-libs-snapshot-local/ --url=https://shadabjfrog.jfrog.io/artifactory/githubactionpoc10-libs-snapshot-local/ --access-token=eyJ2ZXIiOiIyIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYiLCJraWQiOiJvbnpIRjl3bXRGZE1jaGdLbEdEbEcxRFhyUGs2RlpxSDIwRWMwWlo2V3FBIn0.eyJzdWIiOiJqZmFjQDAxaHIyeGIyYmdmeTA4MTl3NnRwY3owOWV4L3VzZXJzL3NoYWRhYm1hbGlrc0BjeWJhZ2UuY29tIiwic2NwIjoiYXBwbGllZC1wZXJtaXNzaW9ucy9hZG1pbiIsImF1ZCI6IipAKiIsImlzcyI6ImpmZmVAMDFocjJ4YjJiZ2Z5MDgxOXc2dHBjejA5ZXgiLCJpYXQiOjE3MDk1NTIwMDgsImp0aSI6IjkyYmNlOGVmLWQzNDMtNGU3ZS05ZDRkLTFmZDVkYzM2YWY4ZSJ9.g_UzURwmOLEfVUgBbNzx1lwHLXbMNWqO2CJ585n37r9IYtiEFQtrzJ_MfiO7xq57pFsYZfFvjAf6_EU0Xd__0Hc7s1SQs_TIY0lXVwAC1Aro6iHfIaD8fmDoPlYb2jJ0D7Fcv2g2KfbQbC3hbAdFFfCKQ-O1fjSiNysAQy1kMCnu2aR_mtvAapUhXS0sAqS3Qo0f8UHJI0A6eNkmpPY9AgKgQ37cqRqhFmeqsY5xd0SeYcmoXLHeE6KQMdo3l03DlQ1LslTUnnlOt9FJpyOx7YCa3RHtd0YNZuNJHo3Zf3uPlECVuxUVlM04pWA0nFuSWWLaccCU5_cuGq-Sb8dKtw

